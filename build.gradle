plugins {
    id 'java'
}

group = 'com.daanta'
version = '1.0-SNAPSHOT'
sourceCompatibility = '20'

repositories {
    mavenCentral()
}

dependencies {

    testImplementation platform('org.junit:junit-bom:latest.integration')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // 로깅 라이브러리
    // api 'org.apache.utils.logging.log4j:log4j-core' <<< 안쓸려고..
    // 1. Bridge
    // https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j
    implementation 'org.slf4j:jcl-over-slf4j:latest.integration'
    // 2. Slf4j API
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:latest.integration'
    // 3. Binding
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:latest.integration'
    // 4. Slf4j's implemented object (=logback)
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    implementation 'ch.qos.logback:logback-core:latest.integration'

    // String 취급을 쉽게 해주는 Apache Commons Lang
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:latest.integration'

    // 파싱 등을 처리하기 위해 영입한 Apache Commons Text
    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    implementation 'org.apache.commons:commons-text:latest.integration'

    // 로깅 어노테이션을 쓰기 위한 롬복
    // LOMBOK은 사용 전제조건이 까다로우므로 사용 시 주의.
    // 1. 어떤 롬복을 어떤 타겟에 implement(release/dev 모두) 최신판의 버전 숫자를 필히 명기해줘야 한다.
    // 2. 반드시 Annotation Processor를 활성해줘야 한다.
    //  1) 밑에처럼 annotationProcessor 형식의 dependency도 추가로 선언해 줘야 함
    //  2) Settings > Build, Execution, Depolyment > Compiler > Annotation Processors
    //     > Enable annotation processing 에 체크해야 함
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    implementation 'org.projectlombok:lombok:latest.integration'
    compileOnly("org.projectlombok:lombok")
    annotationProcessor 'org.projectlombok:lombok:latest.integration'
    testAnnotationProcessor 'org.projectlombok:lombok:latest.integration'

    // JSON 처리 라이브러리 GSON
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:latest.integration'

}

test {
    useJUnitPlatform()
}

// CLI 터미널에서 한글 깨짐 오류가 발생하는 것을 방지한다.
tasks.withType(JavaCompile).configureEach{
    options.encoding = "UTF-8"
}
